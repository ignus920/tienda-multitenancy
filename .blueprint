created:
    - database/factories/ClienteFactory.php
    - database/factories/ProductoFactory.php
    - database/factories/CategoriaFactory.php
    - database/factories/VentaFactory.php
    - database/factories/DetalleVentaFactory.php
    - database/factories/CajaFactory.php
    - database/factories/MovimientoCajaFactory.php
    - database/factories/MovimientoInventarioFactory.php
    - database/migrations/2025_10_15_012829_create_clientes_table.php
    - database/migrations/2025_10_15_012830_create_productos_table.php
    - database/migrations/2025_10_15_012831_create_categorias_table.php
    - database/migrations/2025_10_15_012832_create_ventas_table.php
    - database/migrations/2025_10_15_012833_create_detalle_ventas_table.php
    - database/migrations/2025_10_15_012834_create_cajas_table.php
    - database/migrations/2025_10_15_012835_create_movimiento_cajas_table.php
    - database/migrations/2025_10_15_012836_create_movimiento_inventarios_table.php
    - app/Models/Cliente.php
    - app/Models/Producto.php
    - app/Models/Categoria.php
    - app/Models/Venta.php
    - app/Models/DetalleVenta.php
    - app/Models/Caja.php
    - app/Models/MovimientoCaja.php
    - app/Models/MovimientoInventario.php
models:
    Cliente: { nombre: 'string:200', email: 'string unique nullable', telefono: 'string:20 nullable', direccion: 'text nullable', ciudad: 'string:100 nullable', nit: 'string:50 nullable', tipo: 'enum:natural,juridico default:natural', activo: 'boolean default:true', timestamps: timestamps, relationships: { hasMany: Venta } }
    Producto: { codigo: 'string:100 unique', nombre: 'string:255', descripcion: 'text nullable', precio: 'decimal:10,2', costo: 'decimal:10,2 nullable', stock: 'integer default:0', stock_minimo: 'integer default:5', categoria_id: 'id foreign nullable', activo: 'boolean default:true', timestamps: timestamps, relationships: { belongsTo: Categoria, hasMany: 'DetalleVenta, MovimientoInventario' } }
    Categoria: { nombre: 'string:100', descripcion: 'text nullable', activo: 'boolean default:true', timestamps: timestamps, relationships: { hasMany: Producto } }
    Venta: { numero: 'string:50 unique', fecha: datetime, cliente_id: 'id foreign nullable', usuario_id: 'id foreign', subtotal: 'decimal:10,2', descuento: 'decimal:10,2 default:0', impuesto: 'decimal:10,2 default:0', total: 'decimal:10,2', estado: 'enum:pendiente,pagada,anulada default:pendiente', tipo_pago: 'enum:efectivo,tarjeta,transferencia', observaciones: 'text nullable', timestamps: timestamps, relationships: { belongsTo: 'Cliente, User', hasMany: DetalleVenta } }
    DetalleVenta: { venta_id: 'id foreign', producto_id: 'id foreign', cantidad: 'decimal:10,2', precio_unitario: 'decimal:10,2', descuento: 'decimal:10,2 default:0', subtotal: 'decimal:10,2', timestamps: timestamps, relationships: { belongsTo: 'Venta, Producto' } }
    Caja: { nombre: 'string:100', saldo_inicial: 'decimal:10,2 default:0', saldo_actual: 'decimal:10,2 default:0', fecha_apertura: datetime, fecha_cierre: 'datetime nullable', usuario_id: 'id foreign', estado: 'enum:abierta,cerrada default:abierta', observaciones: 'text nullable', timestamps: timestamps, relationships: { belongsTo: User, hasMany: MovimientoCaja } }
    MovimientoCaja: { caja_id: 'id foreign', tipo: 'enum:ingreso,egreso', concepto: 'string:255', monto: 'decimal:10,2', fecha: datetime, usuario_id: 'id foreign', venta_id: 'id foreign nullable', observaciones: 'text nullable', timestamps: timestamps, relationships: { belongsTo: 'Caja, User, Venta' } }
    MovimientoInventario: { producto_id: 'id foreign', tipo: 'enum:entrada,salida,ajuste', cantidad: 'decimal:10,2', motivo: 'string:255', fecha: datetime, usuario_id: 'id foreign', observaciones: 'text nullable', timestamps: timestamps, relationships: { belongsTo: 'Producto, User' } }
